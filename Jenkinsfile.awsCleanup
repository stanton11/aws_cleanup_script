pipeline {
  agent any

  environment {
    DOCKER_CREDENTIALS = credentials('dockerhub-couchbaseqe')
    GITLAB_CREDENTIALS = credentials('gitlab-couchbaseqe')
    REPO_URL = "git@github.com:stanton11/aws_cleanup_script.git"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout(
          [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, 
            extensions: [], submoduleCfg: [], 
              userRemoteConfigs: [[credentialsId: 'deea6285-5482-4b54-9c69-744e8fcfe322', 
                url: 'git@github.com:stanton11/aws_cleanup_script.git']]]
        )
      }
    }
    
    stage('Build Name') {
      steps {
        // The build name must be unique, or the JUnit trend will crap out.
        buildName "#${BUILD_NUMBER} ${sh(script: 'git log --oneline --format=%B HEAD | head -n 1', returnStdout: true)}"
      }
    }

    stage('Clone Git Repo') {
      steps {
        // Clones the repository from the current branch name
        sh 'mkdir -p build'

        dir('build') {
            git branch: 'master', credentialsId: 	$GITLAB_CREDENTIALS, url: $REPO_URL
        }     
      }
    }

    stage('Run Script') {
      steps {
        sh 'cd build'
        sh 'python3 -m venv venv'
        sh '. venv/bin/activate && pip3 install boto3'
        sh '. venv/bin/activate && python3 aws_cleanup_automation.py'
      }
    }
  }

  post {
    always {
      // Clean up the workspace to free disk space.
      cleanWs()
    }
  }
}